/*
 * This file is automatically generated.
 */
#include <aw/graphics/gl/api/gl_45.h>
#include <aw/graphics/gl/loader.h>

#include <vector>
#include <aw/types/string_view.h>
#include <aw/algorithm/binary_find.h>

namespace gl {
using aw::string_view;
using namespace aw::gl;

namespace ext {
} //namespace ext

/* gl version 1.0 */
decltype(blend_func) blend_func = 0;
decltype(clear) clear = 0;
decltype(clear_color) clear_color = 0;
decltype(clear_depth) clear_depth = 0;
decltype(clear_stencil) clear_stencil = 0;
decltype(color_mask) color_mask = 0;
decltype(cull_face) cull_face = 0;
decltype(depth_func) depth_func = 0;
decltype(depth_mask) depth_mask = 0;
decltype(depth_range) depth_range = 0;
decltype(disable) disable = 0;
decltype(draw_buffer) draw_buffer = 0;
decltype(enable) enable = 0;
decltype(finish) finish = 0;
decltype(flush) flush = 0;
decltype(front_face) front_face = 0;
decltype(get_booleanv) get_booleanv = 0;
decltype(get_doublev) get_doublev = 0;
decltype(get_error) get_error = 0;
decltype(get_floatv) get_floatv = 0;
decltype(get_integerv) get_integerv = 0;
decltype(get_string) get_string = 0;
decltype(get_tex_image) get_tex_image = 0;
decltype(get_tex_level_parameterfv) get_tex_level_parameterfv = 0;
decltype(get_tex_level_parameteriv) get_tex_level_parameteriv = 0;
decltype(get_tex_parameterfv) get_tex_parameterfv = 0;
decltype(get_tex_parameteriv) get_tex_parameteriv = 0;
decltype(hint) hint = 0;
decltype(is_enabled) is_enabled = 0;
decltype(line_width) line_width = 0;
decltype(logic_op) logic_op = 0;
decltype(pixel_storef) pixel_storef = 0;
decltype(pixel_storei) pixel_storei = 0;
decltype(point_size) point_size = 0;
decltype(polygon_mode) polygon_mode = 0;
decltype(read_buffer) read_buffer = 0;
decltype(read_pixels) read_pixels = 0;
decltype(scissor) scissor = 0;
decltype(stencil_func) stencil_func = 0;
decltype(stencil_mask) stencil_mask = 0;
decltype(stencil_op) stencil_op = 0;
decltype(tex_image1_d) tex_image1_d = 0;
decltype(tex_image2_d) tex_image2_d = 0;
decltype(tex_parameterf) tex_parameterf = 0;
decltype(tex_parameterfv) tex_parameterfv = 0;
decltype(tex_parameteri) tex_parameteri = 0;
decltype(tex_parameteriv) tex_parameteriv = 0;
decltype(viewport) viewport = 0;

/* gl version 1.1 */
decltype(bind_texture) bind_texture = 0;
decltype(copy_tex_image1_d) copy_tex_image1_d = 0;
decltype(copy_tex_image2_d) copy_tex_image2_d = 0;
decltype(copy_tex_sub_image1_d) copy_tex_sub_image1_d = 0;
decltype(copy_tex_sub_image2_d) copy_tex_sub_image2_d = 0;
decltype(delete_textures) delete_textures = 0;
decltype(draw_arrays) draw_arrays = 0;
decltype(draw_elements) draw_elements = 0;
decltype(gen_textures) gen_textures = 0;
decltype(get_pointerv) get_pointerv = 0;
decltype(is_texture) is_texture = 0;
decltype(polygon_offset) polygon_offset = 0;
decltype(tex_sub_image1_d) tex_sub_image1_d = 0;
decltype(tex_sub_image2_d) tex_sub_image2_d = 0;

/* gl version 1.2 */
decltype(copy_tex_sub_image3_d) copy_tex_sub_image3_d = 0;
decltype(draw_range_elements) draw_range_elements = 0;
decltype(tex_image3_d) tex_image3_d = 0;
decltype(tex_sub_image3_d) tex_sub_image3_d = 0;

/* gl version 1.3 */
decltype(active_texture) active_texture = 0;
decltype(compressed_tex_image1_d) compressed_tex_image1_d = 0;
decltype(compressed_tex_image2_d) compressed_tex_image2_d = 0;
decltype(compressed_tex_image3_d) compressed_tex_image3_d = 0;
decltype(compressed_tex_sub_image1_d) compressed_tex_sub_image1_d = 0;
decltype(compressed_tex_sub_image2_d) compressed_tex_sub_image2_d = 0;
decltype(compressed_tex_sub_image3_d) compressed_tex_sub_image3_d = 0;
decltype(get_compressed_tex_image) get_compressed_tex_image = 0;
decltype(sample_coverage) sample_coverage = 0;

/* gl version 1.4 */
decltype(blend_color) blend_color = 0;
decltype(blend_equation) blend_equation = 0;
decltype(blend_func_separate) blend_func_separate = 0;
decltype(multi_draw_arrays) multi_draw_arrays = 0;
decltype(multi_draw_elements) multi_draw_elements = 0;
decltype(point_parameterf) point_parameterf = 0;
decltype(point_parameterfv) point_parameterfv = 0;
decltype(point_parameteri) point_parameteri = 0;
decltype(point_parameteriv) point_parameteriv = 0;

/* gl version 1.5 */
decltype(begin_query) begin_query = 0;
decltype(bind_buffer) bind_buffer = 0;
decltype(buffer_data) buffer_data = 0;
decltype(buffer_sub_data) buffer_sub_data = 0;
decltype(delete_buffers) delete_buffers = 0;
decltype(delete_queries) delete_queries = 0;
decltype(end_query) end_query = 0;
decltype(gen_buffers) gen_buffers = 0;
decltype(gen_queries) gen_queries = 0;
decltype(get_buffer_parameteriv) get_buffer_parameteriv = 0;
decltype(get_buffer_pointerv) get_buffer_pointerv = 0;
decltype(get_buffer_sub_data) get_buffer_sub_data = 0;
decltype(get_query_objectiv) get_query_objectiv = 0;
decltype(get_query_objectuiv) get_query_objectuiv = 0;
decltype(get_queryiv) get_queryiv = 0;
decltype(is_buffer) is_buffer = 0;
decltype(is_query) is_query = 0;
decltype(map_buffer) map_buffer = 0;
decltype(unmap_buffer) unmap_buffer = 0;

/* gl version 2.0 */
decltype(attach_shader) attach_shader = 0;
decltype(bind_attrib_location) bind_attrib_location = 0;
decltype(blend_equation_separate) blend_equation_separate = 0;
decltype(compile_shader) compile_shader = 0;
decltype(create_program) create_program = 0;
decltype(create_shader) create_shader = 0;
decltype(delete_program) delete_program = 0;
decltype(delete_shader) delete_shader = 0;
decltype(detach_shader) detach_shader = 0;
decltype(disable_vertex_attrib_array) disable_vertex_attrib_array = 0;
decltype(draw_buffers) draw_buffers = 0;
decltype(enable_vertex_attrib_array) enable_vertex_attrib_array = 0;
decltype(get_active_attrib) get_active_attrib = 0;
decltype(get_active_uniform) get_active_uniform = 0;
decltype(get_attached_shaders) get_attached_shaders = 0;
decltype(get_attrib_location) get_attrib_location = 0;
decltype(get_program_info_log) get_program_info_log = 0;
decltype(get_programiv) get_programiv = 0;
decltype(get_shader_info_log) get_shader_info_log = 0;
decltype(get_shader_source) get_shader_source = 0;
decltype(get_shaderiv) get_shaderiv = 0;
decltype(get_uniform_location) get_uniform_location = 0;
decltype(get_uniformfv) get_uniformfv = 0;
decltype(get_uniformiv) get_uniformiv = 0;
decltype(get_vertex_attrib_pointerv) get_vertex_attrib_pointerv = 0;
decltype(get_vertex_attribdv) get_vertex_attribdv = 0;
decltype(get_vertex_attribfv) get_vertex_attribfv = 0;
decltype(get_vertex_attribiv) get_vertex_attribiv = 0;
decltype(is_program) is_program = 0;
decltype(is_shader) is_shader = 0;
decltype(link_program) link_program = 0;
decltype(shader_source) shader_source = 0;
decltype(stencil_func_separate) stencil_func_separate = 0;
decltype(stencil_mask_separate) stencil_mask_separate = 0;
decltype(stencil_op_separate) stencil_op_separate = 0;
decltype(uniform1f) uniform1f = 0;
decltype(uniform1fv) uniform1fv = 0;
decltype(uniform1i) uniform1i = 0;
decltype(uniform1iv) uniform1iv = 0;
decltype(uniform2f) uniform2f = 0;
decltype(uniform2fv) uniform2fv = 0;
decltype(uniform2i) uniform2i = 0;
decltype(uniform2iv) uniform2iv = 0;
decltype(uniform3f) uniform3f = 0;
decltype(uniform3fv) uniform3fv = 0;
decltype(uniform3i) uniform3i = 0;
decltype(uniform3iv) uniform3iv = 0;
decltype(uniform4f) uniform4f = 0;
decltype(uniform4fv) uniform4fv = 0;
decltype(uniform4i) uniform4i = 0;
decltype(uniform4iv) uniform4iv = 0;
decltype(uniform_matrix2fv) uniform_matrix2fv = 0;
decltype(uniform_matrix3fv) uniform_matrix3fv = 0;
decltype(uniform_matrix4fv) uniform_matrix4fv = 0;
decltype(use_program) use_program = 0;
decltype(validate_program) validate_program = 0;
decltype(vertex_attrib1d) vertex_attrib1d = 0;
decltype(vertex_attrib1dv) vertex_attrib1dv = 0;
decltype(vertex_attrib1f) vertex_attrib1f = 0;
decltype(vertex_attrib1fv) vertex_attrib1fv = 0;
decltype(vertex_attrib1s) vertex_attrib1s = 0;
decltype(vertex_attrib1sv) vertex_attrib1sv = 0;
decltype(vertex_attrib2d) vertex_attrib2d = 0;
decltype(vertex_attrib2dv) vertex_attrib2dv = 0;
decltype(vertex_attrib2f) vertex_attrib2f = 0;
decltype(vertex_attrib2fv) vertex_attrib2fv = 0;
decltype(vertex_attrib2s) vertex_attrib2s = 0;
decltype(vertex_attrib2sv) vertex_attrib2sv = 0;
decltype(vertex_attrib3d) vertex_attrib3d = 0;
decltype(vertex_attrib3dv) vertex_attrib3dv = 0;
decltype(vertex_attrib3f) vertex_attrib3f = 0;
decltype(vertex_attrib3fv) vertex_attrib3fv = 0;
decltype(vertex_attrib3s) vertex_attrib3s = 0;
decltype(vertex_attrib3sv) vertex_attrib3sv = 0;
decltype(vertex_attrib4_nbv) vertex_attrib4_nbv = 0;
decltype(vertex_attrib4_niv) vertex_attrib4_niv = 0;
decltype(vertex_attrib4_nsv) vertex_attrib4_nsv = 0;
decltype(vertex_attrib4_nub) vertex_attrib4_nub = 0;
decltype(vertex_attrib4_nubv) vertex_attrib4_nubv = 0;
decltype(vertex_attrib4_nuiv) vertex_attrib4_nuiv = 0;
decltype(vertex_attrib4_nusv) vertex_attrib4_nusv = 0;
decltype(vertex_attrib4bv) vertex_attrib4bv = 0;
decltype(vertex_attrib4d) vertex_attrib4d = 0;
decltype(vertex_attrib4dv) vertex_attrib4dv = 0;
decltype(vertex_attrib4f) vertex_attrib4f = 0;
decltype(vertex_attrib4fv) vertex_attrib4fv = 0;
decltype(vertex_attrib4iv) vertex_attrib4iv = 0;
decltype(vertex_attrib4s) vertex_attrib4s = 0;
decltype(vertex_attrib4sv) vertex_attrib4sv = 0;
decltype(vertex_attrib4ubv) vertex_attrib4ubv = 0;
decltype(vertex_attrib4uiv) vertex_attrib4uiv = 0;
decltype(vertex_attrib4usv) vertex_attrib4usv = 0;
decltype(vertex_attrib_pointer) vertex_attrib_pointer = 0;

/* gl version 2.1 */
decltype(uniform_matrix2x3fv) uniform_matrix2x3fv = 0;
decltype(uniform_matrix2x4fv) uniform_matrix2x4fv = 0;
decltype(uniform_matrix3x2fv) uniform_matrix3x2fv = 0;
decltype(uniform_matrix3x4fv) uniform_matrix3x4fv = 0;
decltype(uniform_matrix4x2fv) uniform_matrix4x2fv = 0;
decltype(uniform_matrix4x3fv) uniform_matrix4x3fv = 0;

/* gl version 3.0 */
decltype(begin_conditional_render) begin_conditional_render = 0;
decltype(begin_transform_feedback) begin_transform_feedback = 0;
decltype(bind_buffer_base) bind_buffer_base = 0;
decltype(bind_buffer_range) bind_buffer_range = 0;
decltype(bind_frag_data_location) bind_frag_data_location = 0;
decltype(bind_framebuffer) bind_framebuffer = 0;
decltype(bind_renderbuffer) bind_renderbuffer = 0;
decltype(bind_vertex_array) bind_vertex_array = 0;
decltype(blit_framebuffer) blit_framebuffer = 0;
decltype(check_framebuffer_status) check_framebuffer_status = 0;
decltype(clamp_color) clamp_color = 0;
decltype(clear_bufferfi) clear_bufferfi = 0;
decltype(clear_bufferfv) clear_bufferfv = 0;
decltype(clear_bufferiv) clear_bufferiv = 0;
decltype(clear_bufferuiv) clear_bufferuiv = 0;
decltype(color_maski) color_maski = 0;
decltype(delete_framebuffers) delete_framebuffers = 0;
decltype(delete_renderbuffers) delete_renderbuffers = 0;
decltype(delete_vertex_arrays) delete_vertex_arrays = 0;
decltype(disablei) disablei = 0;
decltype(enablei) enablei = 0;
decltype(end_conditional_render) end_conditional_render = 0;
decltype(end_transform_feedback) end_transform_feedback = 0;
decltype(flush_mapped_buffer_range) flush_mapped_buffer_range = 0;
decltype(framebuffer_renderbuffer) framebuffer_renderbuffer = 0;
decltype(framebuffer_texture1_d) framebuffer_texture1_d = 0;
decltype(framebuffer_texture2_d) framebuffer_texture2_d = 0;
decltype(framebuffer_texture3_d) framebuffer_texture3_d = 0;
decltype(framebuffer_texture_layer) framebuffer_texture_layer = 0;
decltype(gen_framebuffers) gen_framebuffers = 0;
decltype(gen_renderbuffers) gen_renderbuffers = 0;
decltype(gen_vertex_arrays) gen_vertex_arrays = 0;
decltype(generate_mipmap) generate_mipmap = 0;
decltype(get_booleani_v) get_booleani_v = 0;
decltype(get_frag_data_location) get_frag_data_location = 0;
decltype(get_framebuffer_attachment_parameteriv) get_framebuffer_attachment_parameteriv = 0;
decltype(get_integeri_v) get_integeri_v = 0;
decltype(get_renderbuffer_parameteriv) get_renderbuffer_parameteriv = 0;
decltype(get_stringi) get_stringi = 0;
decltype(get_tex_parameter_iiv) get_tex_parameter_iiv = 0;
decltype(get_tex_parameter_iuiv) get_tex_parameter_iuiv = 0;
decltype(get_transform_feedback_varying) get_transform_feedback_varying = 0;
decltype(get_uniformuiv) get_uniformuiv = 0;
decltype(get_vertex_attrib_iiv) get_vertex_attrib_iiv = 0;
decltype(get_vertex_attrib_iuiv) get_vertex_attrib_iuiv = 0;
decltype(is_enabledi) is_enabledi = 0;
decltype(is_framebuffer) is_framebuffer = 0;
decltype(is_renderbuffer) is_renderbuffer = 0;
decltype(is_vertex_array) is_vertex_array = 0;
decltype(map_buffer_range) map_buffer_range = 0;
decltype(renderbuffer_storage) renderbuffer_storage = 0;
decltype(renderbuffer_storage_multisample) renderbuffer_storage_multisample = 0;
decltype(tex_parameter_iiv) tex_parameter_iiv = 0;
decltype(tex_parameter_iuiv) tex_parameter_iuiv = 0;
decltype(transform_feedback_varyings) transform_feedback_varyings = 0;
decltype(uniform1ui) uniform1ui = 0;
decltype(uniform1uiv) uniform1uiv = 0;
decltype(uniform2ui) uniform2ui = 0;
decltype(uniform2uiv) uniform2uiv = 0;
decltype(uniform3ui) uniform3ui = 0;
decltype(uniform3uiv) uniform3uiv = 0;
decltype(uniform4ui) uniform4ui = 0;
decltype(uniform4uiv) uniform4uiv = 0;
decltype(vertex_attrib_i1i) vertex_attrib_i1i = 0;
decltype(vertex_attrib_i1iv) vertex_attrib_i1iv = 0;
decltype(vertex_attrib_i1ui) vertex_attrib_i1ui = 0;
decltype(vertex_attrib_i1uiv) vertex_attrib_i1uiv = 0;
decltype(vertex_attrib_i2i) vertex_attrib_i2i = 0;
decltype(vertex_attrib_i2iv) vertex_attrib_i2iv = 0;
decltype(vertex_attrib_i2ui) vertex_attrib_i2ui = 0;
decltype(vertex_attrib_i2uiv) vertex_attrib_i2uiv = 0;
decltype(vertex_attrib_i3i) vertex_attrib_i3i = 0;
decltype(vertex_attrib_i3iv) vertex_attrib_i3iv = 0;
decltype(vertex_attrib_i3ui) vertex_attrib_i3ui = 0;
decltype(vertex_attrib_i3uiv) vertex_attrib_i3uiv = 0;
decltype(vertex_attrib_i4bv) vertex_attrib_i4bv = 0;
decltype(vertex_attrib_i4i) vertex_attrib_i4i = 0;
decltype(vertex_attrib_i4iv) vertex_attrib_i4iv = 0;
decltype(vertex_attrib_i4sv) vertex_attrib_i4sv = 0;
decltype(vertex_attrib_i4ubv) vertex_attrib_i4ubv = 0;
decltype(vertex_attrib_i4ui) vertex_attrib_i4ui = 0;
decltype(vertex_attrib_i4uiv) vertex_attrib_i4uiv = 0;
decltype(vertex_attrib_i4usv) vertex_attrib_i4usv = 0;
decltype(vertex_attrib_i_pointer) vertex_attrib_i_pointer = 0;

/* gl version 3.1 */
decltype(copy_buffer_sub_data) copy_buffer_sub_data = 0;
decltype(draw_arrays_instanced) draw_arrays_instanced = 0;
decltype(draw_elements_instanced) draw_elements_instanced = 0;
decltype(get_active_uniform_block_name) get_active_uniform_block_name = 0;
decltype(get_active_uniform_blockiv) get_active_uniform_blockiv = 0;
decltype(get_active_uniform_name) get_active_uniform_name = 0;
decltype(get_active_uniformsiv) get_active_uniformsiv = 0;
decltype(get_uniform_block_index) get_uniform_block_index = 0;
decltype(get_uniform_indices) get_uniform_indices = 0;
decltype(primitive_restart_index) primitive_restart_index = 0;
decltype(tex_buffer) tex_buffer = 0;
decltype(uniform_block_binding) uniform_block_binding = 0;

/* gl version 3.2 */
decltype(client_wait_sync) client_wait_sync = 0;
decltype(delete_sync) delete_sync = 0;
decltype(draw_elements_base_vertex) draw_elements_base_vertex = 0;
decltype(draw_elements_instanced_base_vertex) draw_elements_instanced_base_vertex = 0;
decltype(draw_range_elements_base_vertex) draw_range_elements_base_vertex = 0;
decltype(fence_sync) fence_sync = 0;
decltype(framebuffer_texture) framebuffer_texture = 0;
decltype(get_buffer_parameteri64v) get_buffer_parameteri64v = 0;
decltype(get_integer64i_v) get_integer64i_v = 0;
decltype(get_integer64v) get_integer64v = 0;
decltype(get_multisamplefv) get_multisamplefv = 0;
decltype(get_synciv) get_synciv = 0;
decltype(is_sync) is_sync = 0;
decltype(multi_draw_elements_base_vertex) multi_draw_elements_base_vertex = 0;
decltype(provoking_vertex) provoking_vertex = 0;
decltype(sample_maski) sample_maski = 0;
decltype(tex_image2_d_multisample) tex_image2_d_multisample = 0;
decltype(tex_image3_d_multisample) tex_image3_d_multisample = 0;
decltype(wait_sync) wait_sync = 0;

/* gl version 3.3 */
decltype(bind_frag_data_location_indexed) bind_frag_data_location_indexed = 0;
decltype(bind_sampler) bind_sampler = 0;
decltype(delete_samplers) delete_samplers = 0;
decltype(gen_samplers) gen_samplers = 0;
decltype(get_frag_data_index) get_frag_data_index = 0;
decltype(get_query_objecti64v) get_query_objecti64v = 0;
decltype(get_query_objectui64v) get_query_objectui64v = 0;
decltype(get_sampler_parameter_iiv) get_sampler_parameter_iiv = 0;
decltype(get_sampler_parameter_iuiv) get_sampler_parameter_iuiv = 0;
decltype(get_sampler_parameterfv) get_sampler_parameterfv = 0;
decltype(get_sampler_parameteriv) get_sampler_parameteriv = 0;
decltype(is_sampler) is_sampler = 0;
decltype(query_counter) query_counter = 0;
decltype(sampler_parameter_iiv) sampler_parameter_iiv = 0;
decltype(sampler_parameter_iuiv) sampler_parameter_iuiv = 0;
decltype(sampler_parameterf) sampler_parameterf = 0;
decltype(sampler_parameterfv) sampler_parameterfv = 0;
decltype(sampler_parameteri) sampler_parameteri = 0;
decltype(sampler_parameteriv) sampler_parameteriv = 0;
decltype(vertex_attrib_divisor) vertex_attrib_divisor = 0;
decltype(vertex_attrib_p1ui) vertex_attrib_p1ui = 0;
decltype(vertex_attrib_p1uiv) vertex_attrib_p1uiv = 0;
decltype(vertex_attrib_p2ui) vertex_attrib_p2ui = 0;
decltype(vertex_attrib_p2uiv) vertex_attrib_p2uiv = 0;
decltype(vertex_attrib_p3ui) vertex_attrib_p3ui = 0;
decltype(vertex_attrib_p3uiv) vertex_attrib_p3uiv = 0;
decltype(vertex_attrib_p4ui) vertex_attrib_p4ui = 0;
decltype(vertex_attrib_p4uiv) vertex_attrib_p4uiv = 0;

/* gl version 4.0 */
decltype(begin_query_indexed) begin_query_indexed = 0;
decltype(bind_transform_feedback) bind_transform_feedback = 0;
decltype(blend_equation_separatei) blend_equation_separatei = 0;
decltype(blend_equationi) blend_equationi = 0;
decltype(blend_func_separatei) blend_func_separatei = 0;
decltype(blend_funci) blend_funci = 0;
decltype(delete_transform_feedbacks) delete_transform_feedbacks = 0;
decltype(draw_arrays_indirect) draw_arrays_indirect = 0;
decltype(draw_elements_indirect) draw_elements_indirect = 0;
decltype(draw_transform_feedback) draw_transform_feedback = 0;
decltype(draw_transform_feedback_stream) draw_transform_feedback_stream = 0;
decltype(end_query_indexed) end_query_indexed = 0;
decltype(gen_transform_feedbacks) gen_transform_feedbacks = 0;
decltype(get_active_subroutine_name) get_active_subroutine_name = 0;
decltype(get_active_subroutine_uniform_name) get_active_subroutine_uniform_name = 0;
decltype(get_active_subroutine_uniformiv) get_active_subroutine_uniformiv = 0;
decltype(get_program_stageiv) get_program_stageiv = 0;
decltype(get_query_indexediv) get_query_indexediv = 0;
decltype(get_subroutine_index) get_subroutine_index = 0;
decltype(get_subroutine_uniform_location) get_subroutine_uniform_location = 0;
decltype(get_uniform_subroutineuiv) get_uniform_subroutineuiv = 0;
decltype(get_uniformdv) get_uniformdv = 0;
decltype(is_transform_feedback) is_transform_feedback = 0;
decltype(min_sample_shading) min_sample_shading = 0;
decltype(patch_parameterfv) patch_parameterfv = 0;
decltype(patch_parameteri) patch_parameteri = 0;
decltype(pause_transform_feedback) pause_transform_feedback = 0;
decltype(resume_transform_feedback) resume_transform_feedback = 0;
decltype(uniform1d) uniform1d = 0;
decltype(uniform1dv) uniform1dv = 0;
decltype(uniform2d) uniform2d = 0;
decltype(uniform2dv) uniform2dv = 0;
decltype(uniform3d) uniform3d = 0;
decltype(uniform3dv) uniform3dv = 0;
decltype(uniform4d) uniform4d = 0;
decltype(uniform4dv) uniform4dv = 0;
decltype(uniform_matrix2dv) uniform_matrix2dv = 0;
decltype(uniform_matrix2x3dv) uniform_matrix2x3dv = 0;
decltype(uniform_matrix2x4dv) uniform_matrix2x4dv = 0;
decltype(uniform_matrix3dv) uniform_matrix3dv = 0;
decltype(uniform_matrix3x2dv) uniform_matrix3x2dv = 0;
decltype(uniform_matrix3x4dv) uniform_matrix3x4dv = 0;
decltype(uniform_matrix4dv) uniform_matrix4dv = 0;
decltype(uniform_matrix4x2dv) uniform_matrix4x2dv = 0;
decltype(uniform_matrix4x3dv) uniform_matrix4x3dv = 0;
decltype(uniform_subroutinesuiv) uniform_subroutinesuiv = 0;

/* gl version 4.1 */
decltype(active_shader_program) active_shader_program = 0;
decltype(bind_program_pipeline) bind_program_pipeline = 0;
decltype(clear_depthf) clear_depthf = 0;
decltype(create_shader_programv) create_shader_programv = 0;
decltype(delete_program_pipelines) delete_program_pipelines = 0;
decltype(depth_range_arrayv) depth_range_arrayv = 0;
decltype(depth_range_indexed) depth_range_indexed = 0;
decltype(depth_rangef) depth_rangef = 0;
decltype(gen_program_pipelines) gen_program_pipelines = 0;
decltype(get_doublei_v) get_doublei_v = 0;
decltype(get_floati_v) get_floati_v = 0;
decltype(get_program_binary) get_program_binary = 0;
decltype(get_program_pipeline_info_log) get_program_pipeline_info_log = 0;
decltype(get_program_pipelineiv) get_program_pipelineiv = 0;
decltype(get_shader_precision_format) get_shader_precision_format = 0;
decltype(get_vertex_attrib_ldv) get_vertex_attrib_ldv = 0;
decltype(is_program_pipeline) is_program_pipeline = 0;
decltype(program_binary) program_binary = 0;
decltype(program_parameteri) program_parameteri = 0;
decltype(program_uniform1d) program_uniform1d = 0;
decltype(program_uniform1dv) program_uniform1dv = 0;
decltype(program_uniform1f) program_uniform1f = 0;
decltype(program_uniform1fv) program_uniform1fv = 0;
decltype(program_uniform1i) program_uniform1i = 0;
decltype(program_uniform1iv) program_uniform1iv = 0;
decltype(program_uniform1ui) program_uniform1ui = 0;
decltype(program_uniform1uiv) program_uniform1uiv = 0;
decltype(program_uniform2d) program_uniform2d = 0;
decltype(program_uniform2dv) program_uniform2dv = 0;
decltype(program_uniform2f) program_uniform2f = 0;
decltype(program_uniform2fv) program_uniform2fv = 0;
decltype(program_uniform2i) program_uniform2i = 0;
decltype(program_uniform2iv) program_uniform2iv = 0;
decltype(program_uniform2ui) program_uniform2ui = 0;
decltype(program_uniform2uiv) program_uniform2uiv = 0;
decltype(program_uniform3d) program_uniform3d = 0;
decltype(program_uniform3dv) program_uniform3dv = 0;
decltype(program_uniform3f) program_uniform3f = 0;
decltype(program_uniform3fv) program_uniform3fv = 0;
decltype(program_uniform3i) program_uniform3i = 0;
decltype(program_uniform3iv) program_uniform3iv = 0;
decltype(program_uniform3ui) program_uniform3ui = 0;
decltype(program_uniform3uiv) program_uniform3uiv = 0;
decltype(program_uniform4d) program_uniform4d = 0;
decltype(program_uniform4dv) program_uniform4dv = 0;
decltype(program_uniform4f) program_uniform4f = 0;
decltype(program_uniform4fv) program_uniform4fv = 0;
decltype(program_uniform4i) program_uniform4i = 0;
decltype(program_uniform4iv) program_uniform4iv = 0;
decltype(program_uniform4ui) program_uniform4ui = 0;
decltype(program_uniform4uiv) program_uniform4uiv = 0;
decltype(program_uniform_matrix2dv) program_uniform_matrix2dv = 0;
decltype(program_uniform_matrix2fv) program_uniform_matrix2fv = 0;
decltype(program_uniform_matrix2x3dv) program_uniform_matrix2x3dv = 0;
decltype(program_uniform_matrix2x3fv) program_uniform_matrix2x3fv = 0;
decltype(program_uniform_matrix2x4dv) program_uniform_matrix2x4dv = 0;
decltype(program_uniform_matrix2x4fv) program_uniform_matrix2x4fv = 0;
decltype(program_uniform_matrix3dv) program_uniform_matrix3dv = 0;
decltype(program_uniform_matrix3fv) program_uniform_matrix3fv = 0;
decltype(program_uniform_matrix3x2dv) program_uniform_matrix3x2dv = 0;
decltype(program_uniform_matrix3x2fv) program_uniform_matrix3x2fv = 0;
decltype(program_uniform_matrix3x4dv) program_uniform_matrix3x4dv = 0;
decltype(program_uniform_matrix3x4fv) program_uniform_matrix3x4fv = 0;
decltype(program_uniform_matrix4dv) program_uniform_matrix4dv = 0;
decltype(program_uniform_matrix4fv) program_uniform_matrix4fv = 0;
decltype(program_uniform_matrix4x2dv) program_uniform_matrix4x2dv = 0;
decltype(program_uniform_matrix4x2fv) program_uniform_matrix4x2fv = 0;
decltype(program_uniform_matrix4x3dv) program_uniform_matrix4x3dv = 0;
decltype(program_uniform_matrix4x3fv) program_uniform_matrix4x3fv = 0;
decltype(release_shader_compiler) release_shader_compiler = 0;
decltype(scissor_arrayv) scissor_arrayv = 0;
decltype(scissor_indexed) scissor_indexed = 0;
decltype(scissor_indexedv) scissor_indexedv = 0;
decltype(shader_binary) shader_binary = 0;
decltype(use_program_stages) use_program_stages = 0;
decltype(validate_program_pipeline) validate_program_pipeline = 0;
decltype(vertex_attrib_l1d) vertex_attrib_l1d = 0;
decltype(vertex_attrib_l1dv) vertex_attrib_l1dv = 0;
decltype(vertex_attrib_l2d) vertex_attrib_l2d = 0;
decltype(vertex_attrib_l2dv) vertex_attrib_l2dv = 0;
decltype(vertex_attrib_l3d) vertex_attrib_l3d = 0;
decltype(vertex_attrib_l3dv) vertex_attrib_l3dv = 0;
decltype(vertex_attrib_l4d) vertex_attrib_l4d = 0;
decltype(vertex_attrib_l4dv) vertex_attrib_l4dv = 0;
decltype(vertex_attrib_l_pointer) vertex_attrib_l_pointer = 0;
decltype(viewport_arrayv) viewport_arrayv = 0;
decltype(viewport_indexedf) viewport_indexedf = 0;
decltype(viewport_indexedfv) viewport_indexedfv = 0;

/* gl version 4.2 */
decltype(bind_image_texture) bind_image_texture = 0;
decltype(draw_arrays_instanced_base_instance) draw_arrays_instanced_base_instance = 0;
decltype(draw_elements_instanced_base_instance) draw_elements_instanced_base_instance = 0;
decltype(draw_elements_instanced_base_vertex_base_instance) draw_elements_instanced_base_vertex_base_instance = 0;
decltype(draw_transform_feedback_instanced) draw_transform_feedback_instanced = 0;
decltype(draw_transform_feedback_stream_instanced) draw_transform_feedback_stream_instanced = 0;
decltype(get_active_atomic_counter_bufferiv) get_active_atomic_counter_bufferiv = 0;
decltype(get_internalformativ) get_internalformativ = 0;
decltype(memory_barrier) memory_barrier = 0;
decltype(tex_storage1_d) tex_storage1_d = 0;
decltype(tex_storage2_d) tex_storage2_d = 0;
decltype(tex_storage3_d) tex_storage3_d = 0;

/* gl version 4.3 */
decltype(bind_vertex_buffer) bind_vertex_buffer = 0;
decltype(clear_buffer_data) clear_buffer_data = 0;
decltype(clear_buffer_sub_data) clear_buffer_sub_data = 0;
decltype(copy_image_sub_data) copy_image_sub_data = 0;
decltype(debug_message_callback) debug_message_callback = 0;
decltype(debug_message_control) debug_message_control = 0;
decltype(debug_message_insert) debug_message_insert = 0;
decltype(dispatch_compute) dispatch_compute = 0;
decltype(dispatch_compute_indirect) dispatch_compute_indirect = 0;
decltype(framebuffer_parameteri) framebuffer_parameteri = 0;
decltype(get_debug_message_log) get_debug_message_log = 0;
decltype(get_framebuffer_parameteriv) get_framebuffer_parameteriv = 0;
decltype(get_internalformati64v) get_internalformati64v = 0;
decltype(get_object_label) get_object_label = 0;
decltype(get_object_ptr_label) get_object_ptr_label = 0;
decltype(get_program_interfaceiv) get_program_interfaceiv = 0;
decltype(get_program_resource_index) get_program_resource_index = 0;
decltype(get_program_resource_location) get_program_resource_location = 0;
decltype(get_program_resource_location_index) get_program_resource_location_index = 0;
decltype(get_program_resource_name) get_program_resource_name = 0;
decltype(get_program_resourceiv) get_program_resourceiv = 0;
decltype(invalidate_buffer_data) invalidate_buffer_data = 0;
decltype(invalidate_buffer_sub_data) invalidate_buffer_sub_data = 0;
decltype(invalidate_framebuffer) invalidate_framebuffer = 0;
decltype(invalidate_sub_framebuffer) invalidate_sub_framebuffer = 0;
decltype(invalidate_tex_image) invalidate_tex_image = 0;
decltype(invalidate_tex_sub_image) invalidate_tex_sub_image = 0;
decltype(multi_draw_arrays_indirect) multi_draw_arrays_indirect = 0;
decltype(multi_draw_elements_indirect) multi_draw_elements_indirect = 0;
decltype(object_label) object_label = 0;
decltype(object_ptr_label) object_ptr_label = 0;
decltype(pop_debug_group) pop_debug_group = 0;
decltype(push_debug_group) push_debug_group = 0;
decltype(shader_storage_block_binding) shader_storage_block_binding = 0;
decltype(tex_buffer_range) tex_buffer_range = 0;
decltype(tex_storage2_d_multisample) tex_storage2_d_multisample = 0;
decltype(tex_storage3_d_multisample) tex_storage3_d_multisample = 0;
decltype(texture_view) texture_view = 0;
decltype(vertex_attrib_binding) vertex_attrib_binding = 0;
decltype(vertex_attrib_format) vertex_attrib_format = 0;
decltype(vertex_attrib_i_format) vertex_attrib_i_format = 0;
decltype(vertex_attrib_l_format) vertex_attrib_l_format = 0;
decltype(vertex_binding_divisor) vertex_binding_divisor = 0;

/* gl version 4.4 */
decltype(bind_buffers_base) bind_buffers_base = 0;
decltype(bind_buffers_range) bind_buffers_range = 0;
decltype(bind_image_textures) bind_image_textures = 0;
decltype(bind_samplers) bind_samplers = 0;
decltype(bind_textures) bind_textures = 0;
decltype(bind_vertex_buffers) bind_vertex_buffers = 0;
decltype(buffer_storage) buffer_storage = 0;
decltype(clear_tex_image) clear_tex_image = 0;
decltype(clear_tex_sub_image) clear_tex_sub_image = 0;

/* gl version 4.5 */
decltype(bind_texture_unit) bind_texture_unit = 0;
decltype(blit_named_framebuffer) blit_named_framebuffer = 0;
decltype(check_named_framebuffer_status) check_named_framebuffer_status = 0;
decltype(clear_named_buffer_data) clear_named_buffer_data = 0;
decltype(clear_named_buffer_sub_data) clear_named_buffer_sub_data = 0;
decltype(clear_named_framebufferfi) clear_named_framebufferfi = 0;
decltype(clear_named_framebufferfv) clear_named_framebufferfv = 0;
decltype(clear_named_framebufferiv) clear_named_framebufferiv = 0;
decltype(clear_named_framebufferuiv) clear_named_framebufferuiv = 0;
decltype(clip_control) clip_control = 0;
decltype(compressed_texture_sub_image1_d) compressed_texture_sub_image1_d = 0;
decltype(compressed_texture_sub_image2_d) compressed_texture_sub_image2_d = 0;
decltype(compressed_texture_sub_image3_d) compressed_texture_sub_image3_d = 0;
decltype(copy_named_buffer_sub_data) copy_named_buffer_sub_data = 0;
decltype(copy_texture_sub_image1_d) copy_texture_sub_image1_d = 0;
decltype(copy_texture_sub_image2_d) copy_texture_sub_image2_d = 0;
decltype(copy_texture_sub_image3_d) copy_texture_sub_image3_d = 0;
decltype(create_buffers) create_buffers = 0;
decltype(create_framebuffers) create_framebuffers = 0;
decltype(create_program_pipelines) create_program_pipelines = 0;
decltype(create_queries) create_queries = 0;
decltype(create_renderbuffers) create_renderbuffers = 0;
decltype(create_samplers) create_samplers = 0;
decltype(create_textures) create_textures = 0;
decltype(create_transform_feedbacks) create_transform_feedbacks = 0;
decltype(create_vertex_arrays) create_vertex_arrays = 0;
decltype(disable_vertex_array_attrib) disable_vertex_array_attrib = 0;
decltype(enable_vertex_array_attrib) enable_vertex_array_attrib = 0;
decltype(flush_mapped_named_buffer_range) flush_mapped_named_buffer_range = 0;
decltype(generate_texture_mipmap) generate_texture_mipmap = 0;
decltype(get_compressed_texture_image) get_compressed_texture_image = 0;
decltype(get_compressed_texture_sub_image) get_compressed_texture_sub_image = 0;
decltype(get_graphics_reset_status) get_graphics_reset_status = 0;
decltype(get_named_buffer_parameteri64v) get_named_buffer_parameteri64v = 0;
decltype(get_named_buffer_parameteriv) get_named_buffer_parameteriv = 0;
decltype(get_named_buffer_pointerv) get_named_buffer_pointerv = 0;
decltype(get_named_buffer_sub_data) get_named_buffer_sub_data = 0;
decltype(get_named_framebuffer_attachment_parameteriv) get_named_framebuffer_attachment_parameteriv = 0;
decltype(get_named_framebuffer_parameteriv) get_named_framebuffer_parameteriv = 0;
decltype(get_named_renderbuffer_parameteriv) get_named_renderbuffer_parameteriv = 0;
decltype(get_query_buffer_objecti64v) get_query_buffer_objecti64v = 0;
decltype(get_query_buffer_objectiv) get_query_buffer_objectiv = 0;
decltype(get_query_buffer_objectui64v) get_query_buffer_objectui64v = 0;
decltype(get_query_buffer_objectuiv) get_query_buffer_objectuiv = 0;
decltype(get_texture_image) get_texture_image = 0;
decltype(get_texture_level_parameterfv) get_texture_level_parameterfv = 0;
decltype(get_texture_level_parameteriv) get_texture_level_parameteriv = 0;
decltype(get_texture_parameter_iiv) get_texture_parameter_iiv = 0;
decltype(get_texture_parameter_iuiv) get_texture_parameter_iuiv = 0;
decltype(get_texture_parameterfv) get_texture_parameterfv = 0;
decltype(get_texture_parameteriv) get_texture_parameteriv = 0;
decltype(get_texture_sub_image) get_texture_sub_image = 0;
decltype(get_transform_feedbacki64_v) get_transform_feedbacki64_v = 0;
decltype(get_transform_feedbacki_v) get_transform_feedbacki_v = 0;
decltype(get_transform_feedbackiv) get_transform_feedbackiv = 0;
decltype(get_vertex_array_indexed64iv) get_vertex_array_indexed64iv = 0;
decltype(get_vertex_array_indexediv) get_vertex_array_indexediv = 0;
decltype(get_vertex_arrayiv) get_vertex_arrayiv = 0;
decltype(getn_compressed_tex_image) getn_compressed_tex_image = 0;
decltype(getn_tex_image) getn_tex_image = 0;
decltype(getn_uniformdv) getn_uniformdv = 0;
decltype(getn_uniformfv) getn_uniformfv = 0;
decltype(getn_uniformiv) getn_uniformiv = 0;
decltype(getn_uniformuiv) getn_uniformuiv = 0;
decltype(invalidate_named_framebuffer_data) invalidate_named_framebuffer_data = 0;
decltype(invalidate_named_framebuffer_sub_data) invalidate_named_framebuffer_sub_data = 0;
decltype(map_named_buffer) map_named_buffer = 0;
decltype(map_named_buffer_range) map_named_buffer_range = 0;
decltype(memory_barrier_by_region) memory_barrier_by_region = 0;
decltype(named_buffer_data) named_buffer_data = 0;
decltype(named_buffer_storage) named_buffer_storage = 0;
decltype(named_buffer_sub_data) named_buffer_sub_data = 0;
decltype(named_framebuffer_draw_buffer) named_framebuffer_draw_buffer = 0;
decltype(named_framebuffer_draw_buffers) named_framebuffer_draw_buffers = 0;
decltype(named_framebuffer_parameteri) named_framebuffer_parameteri = 0;
decltype(named_framebuffer_read_buffer) named_framebuffer_read_buffer = 0;
decltype(named_framebuffer_renderbuffer) named_framebuffer_renderbuffer = 0;
decltype(named_framebuffer_texture) named_framebuffer_texture = 0;
decltype(named_framebuffer_texture_layer) named_framebuffer_texture_layer = 0;
decltype(named_renderbuffer_storage) named_renderbuffer_storage = 0;
decltype(named_renderbuffer_storage_multisample) named_renderbuffer_storage_multisample = 0;
decltype(readn_pixels) readn_pixels = 0;
decltype(texture_barrier) texture_barrier = 0;
decltype(texture_buffer) texture_buffer = 0;
decltype(texture_buffer_range) texture_buffer_range = 0;
decltype(texture_parameter_iiv) texture_parameter_iiv = 0;
decltype(texture_parameter_iuiv) texture_parameter_iuiv = 0;
decltype(texture_parameterf) texture_parameterf = 0;
decltype(texture_parameterfv) texture_parameterfv = 0;
decltype(texture_parameteri) texture_parameteri = 0;
decltype(texture_parameteriv) texture_parameteriv = 0;
decltype(texture_storage1_d) texture_storage1_d = 0;
decltype(texture_storage2_d) texture_storage2_d = 0;
decltype(texture_storage2_d_multisample) texture_storage2_d_multisample = 0;
decltype(texture_storage3_d) texture_storage3_d = 0;
decltype(texture_storage3_d_multisample) texture_storage3_d_multisample = 0;
decltype(texture_sub_image1_d) texture_sub_image1_d = 0;
decltype(texture_sub_image2_d) texture_sub_image2_d = 0;
decltype(texture_sub_image3_d) texture_sub_image3_d = 0;
decltype(transform_feedback_buffer_base) transform_feedback_buffer_base = 0;
decltype(transform_feedback_buffer_range) transform_feedback_buffer_range = 0;
decltype(unmap_named_buffer) unmap_named_buffer = 0;
decltype(vertex_array_attrib_binding) vertex_array_attrib_binding = 0;
decltype(vertex_array_attrib_format) vertex_array_attrib_format = 0;
decltype(vertex_array_attrib_i_format) vertex_array_attrib_i_format = 0;
decltype(vertex_array_attrib_l_format) vertex_array_attrib_l_format = 0;
decltype(vertex_array_binding_divisor) vertex_array_binding_divisor = 0;
decltype(vertex_array_element_buffer) vertex_array_element_buffer = 0;
decltype(vertex_array_vertex_buffer) vertex_array_vertex_buffer = 0;
decltype(vertex_array_vertex_buffers) vertex_array_vertex_buffers = 0;

namespace {
int load_gl_3_2_functions()
{
	int num_failed = 0;
	auto core_load_func = [&] (auto& func, char const* spec) {
		get_proc(func, spec);
		if (!func) ++num_failed;
	};
	core_load_func(blend_func, "glBlendFunc");
	core_load_func(clear, "glClear");
	core_load_func(clear_color, "glClearColor");
	core_load_func(clear_depth, "glClearDepth");
	core_load_func(clear_stencil, "glClearStencil");
	core_load_func(color_mask, "glColorMask");
	core_load_func(cull_face, "glCullFace");
	core_load_func(depth_func, "glDepthFunc");
	core_load_func(depth_mask, "glDepthMask");
	core_load_func(depth_range, "glDepthRange");
	core_load_func(disable, "glDisable");
	core_load_func(draw_buffer, "glDrawBuffer");
	core_load_func(enable, "glEnable");
	core_load_func(finish, "glFinish");
	core_load_func(flush, "glFlush");
	core_load_func(front_face, "glFrontFace");
	core_load_func(get_booleanv, "glGetBooleanv");
	core_load_func(get_doublev, "glGetDoublev");
	core_load_func(get_error, "glGetError");
	core_load_func(get_floatv, "glGetFloatv");
	core_load_func(get_integerv, "glGetIntegerv");
	core_load_func(get_string, "glGetString");
	core_load_func(get_tex_image, "glGetTexImage");
	core_load_func(get_tex_level_parameterfv, "glGetTexLevelParameterfv");
	core_load_func(get_tex_level_parameteriv, "glGetTexLevelParameteriv");
	core_load_func(get_tex_parameterfv, "glGetTexParameterfv");
	core_load_func(get_tex_parameteriv, "glGetTexParameteriv");
	core_load_func(hint, "glHint");
	core_load_func(is_enabled, "glIsEnabled");
	core_load_func(line_width, "glLineWidth");
	core_load_func(logic_op, "glLogicOp");
	core_load_func(pixel_storef, "glPixelStoref");
	core_load_func(pixel_storei, "glPixelStorei");
	core_load_func(point_size, "glPointSize");
	core_load_func(polygon_mode, "glPolygonMode");
	core_load_func(read_buffer, "glReadBuffer");
	core_load_func(read_pixels, "glReadPixels");
	core_load_func(scissor, "glScissor");
	core_load_func(stencil_func, "glStencilFunc");
	core_load_func(stencil_mask, "glStencilMask");
	core_load_func(stencil_op, "glStencilOp");
	core_load_func(tex_image1_d, "glTexImage1D");
	core_load_func(tex_image2_d, "glTexImage2D");
	core_load_func(tex_parameterf, "glTexParameterf");
	core_load_func(tex_parameterfv, "glTexParameterfv");
	core_load_func(tex_parameteri, "glTexParameteri");
	core_load_func(tex_parameteriv, "glTexParameteriv");
	core_load_func(viewport, "glViewport");
	core_load_func(bind_texture, "glBindTexture");
	core_load_func(copy_tex_image1_d, "glCopyTexImage1D");
	core_load_func(copy_tex_image2_d, "glCopyTexImage2D");
	core_load_func(copy_tex_sub_image1_d, "glCopyTexSubImage1D");
	core_load_func(copy_tex_sub_image2_d, "glCopyTexSubImage2D");
	core_load_func(delete_textures, "glDeleteTextures");
	core_load_func(draw_arrays, "glDrawArrays");
	core_load_func(draw_elements, "glDrawElements");
	core_load_func(gen_textures, "glGenTextures");
	core_load_func(get_pointerv, "glGetPointerv");
	core_load_func(is_texture, "glIsTexture");
	core_load_func(polygon_offset, "glPolygonOffset");
	core_load_func(tex_sub_image1_d, "glTexSubImage1D");
	core_load_func(tex_sub_image2_d, "glTexSubImage2D");
	core_load_func(copy_tex_sub_image3_d, "glCopyTexSubImage3D");
	core_load_func(draw_range_elements, "glDrawRangeElements");
	core_load_func(tex_image3_d, "glTexImage3D");
	core_load_func(tex_sub_image3_d, "glTexSubImage3D");
	core_load_func(active_texture, "glActiveTexture");
	core_load_func(compressed_tex_image1_d, "glCompressedTexImage1D");
	core_load_func(compressed_tex_image2_d, "glCompressedTexImage2D");
	core_load_func(compressed_tex_image3_d, "glCompressedTexImage3D");
	core_load_func(compressed_tex_sub_image1_d, "glCompressedTexSubImage1D");
	core_load_func(compressed_tex_sub_image2_d, "glCompressedTexSubImage2D");
	core_load_func(compressed_tex_sub_image3_d, "glCompressedTexSubImage3D");
	core_load_func(get_compressed_tex_image, "glGetCompressedTexImage");
	core_load_func(sample_coverage, "glSampleCoverage");
	core_load_func(blend_color, "glBlendColor");
	core_load_func(blend_equation, "glBlendEquation");
	core_load_func(blend_func_separate, "glBlendFuncSeparate");
	core_load_func(multi_draw_arrays, "glMultiDrawArrays");
	core_load_func(multi_draw_elements, "glMultiDrawElements");
	core_load_func(point_parameterf, "glPointParameterf");
	core_load_func(point_parameterfv, "glPointParameterfv");
	core_load_func(point_parameteri, "glPointParameteri");
	core_load_func(point_parameteriv, "glPointParameteriv");
	core_load_func(begin_query, "glBeginQuery");
	core_load_func(bind_buffer, "glBindBuffer");
	core_load_func(buffer_data, "glBufferData");
	core_load_func(buffer_sub_data, "glBufferSubData");
	core_load_func(delete_buffers, "glDeleteBuffers");
	core_load_func(delete_queries, "glDeleteQueries");
	core_load_func(end_query, "glEndQuery");
	core_load_func(gen_buffers, "glGenBuffers");
	core_load_func(gen_queries, "glGenQueries");
	core_load_func(get_buffer_parameteriv, "glGetBufferParameteriv");
	core_load_func(get_buffer_pointerv, "glGetBufferPointerv");
	core_load_func(get_buffer_sub_data, "glGetBufferSubData");
	core_load_func(get_query_objectiv, "glGetQueryObjectiv");
	core_load_func(get_query_objectuiv, "glGetQueryObjectuiv");
	core_load_func(get_queryiv, "glGetQueryiv");
	core_load_func(is_buffer, "glIsBuffer");
	core_load_func(is_query, "glIsQuery");
	core_load_func(map_buffer, "glMapBuffer");
	core_load_func(unmap_buffer, "glUnmapBuffer");
	core_load_func(attach_shader, "glAttachShader");
	core_load_func(bind_attrib_location, "glBindAttribLocation");
	core_load_func(blend_equation_separate, "glBlendEquationSeparate");
	core_load_func(compile_shader, "glCompileShader");
	core_load_func(create_program, "glCreateProgram");
	core_load_func(create_shader, "glCreateShader");
	core_load_func(delete_program, "glDeleteProgram");
	core_load_func(delete_shader, "glDeleteShader");
	core_load_func(detach_shader, "glDetachShader");
	core_load_func(disable_vertex_attrib_array, "glDisableVertexAttribArray");
	core_load_func(draw_buffers, "glDrawBuffers");
	core_load_func(enable_vertex_attrib_array, "glEnableVertexAttribArray");
	core_load_func(get_active_attrib, "glGetActiveAttrib");
	core_load_func(get_active_uniform, "glGetActiveUniform");
	core_load_func(get_attached_shaders, "glGetAttachedShaders");
	core_load_func(get_attrib_location, "glGetAttribLocation");
	core_load_func(get_program_info_log, "glGetProgramInfoLog");
	core_load_func(get_programiv, "glGetProgramiv");
	core_load_func(get_shader_info_log, "glGetShaderInfoLog");
	core_load_func(get_shader_source, "glGetShaderSource");
	core_load_func(get_shaderiv, "glGetShaderiv");
	core_load_func(get_uniform_location, "glGetUniformLocation");
	core_load_func(get_uniformfv, "glGetUniformfv");
	core_load_func(get_uniformiv, "glGetUniformiv");
	core_load_func(get_vertex_attrib_pointerv, "glGetVertexAttribPointerv");
	core_load_func(get_vertex_attribdv, "glGetVertexAttribdv");
	core_load_func(get_vertex_attribfv, "glGetVertexAttribfv");
	core_load_func(get_vertex_attribiv, "glGetVertexAttribiv");
	core_load_func(is_program, "glIsProgram");
	core_load_func(is_shader, "glIsShader");
	core_load_func(link_program, "glLinkProgram");
	core_load_func(shader_source, "glShaderSource");
	core_load_func(stencil_func_separate, "glStencilFuncSeparate");
	core_load_func(stencil_mask_separate, "glStencilMaskSeparate");
	core_load_func(stencil_op_separate, "glStencilOpSeparate");
	core_load_func(uniform1f, "glUniform1f");
	core_load_func(uniform1fv, "glUniform1fv");
	core_load_func(uniform1i, "glUniform1i");
	core_load_func(uniform1iv, "glUniform1iv");
	core_load_func(uniform2f, "glUniform2f");
	core_load_func(uniform2fv, "glUniform2fv");
	core_load_func(uniform2i, "glUniform2i");
	core_load_func(uniform2iv, "glUniform2iv");
	core_load_func(uniform3f, "glUniform3f");
	core_load_func(uniform3fv, "glUniform3fv");
	core_load_func(uniform3i, "glUniform3i");
	core_load_func(uniform3iv, "glUniform3iv");
	core_load_func(uniform4f, "glUniform4f");
	core_load_func(uniform4fv, "glUniform4fv");
	core_load_func(uniform4i, "glUniform4i");
	core_load_func(uniform4iv, "glUniform4iv");
	core_load_func(uniform_matrix2fv, "glUniformMatrix2fv");
	core_load_func(uniform_matrix3fv, "glUniformMatrix3fv");
	core_load_func(uniform_matrix4fv, "glUniformMatrix4fv");
	core_load_func(use_program, "glUseProgram");
	core_load_func(validate_program, "glValidateProgram");
	core_load_func(vertex_attrib1d, "glVertexAttrib1d");
	core_load_func(vertex_attrib1dv, "glVertexAttrib1dv");
	core_load_func(vertex_attrib1f, "glVertexAttrib1f");
	core_load_func(vertex_attrib1fv, "glVertexAttrib1fv");
	core_load_func(vertex_attrib1s, "glVertexAttrib1s");
	core_load_func(vertex_attrib1sv, "glVertexAttrib1sv");
	core_load_func(vertex_attrib2d, "glVertexAttrib2d");
	core_load_func(vertex_attrib2dv, "glVertexAttrib2dv");
	core_load_func(vertex_attrib2f, "glVertexAttrib2f");
	core_load_func(vertex_attrib2fv, "glVertexAttrib2fv");
	core_load_func(vertex_attrib2s, "glVertexAttrib2s");
	core_load_func(vertex_attrib2sv, "glVertexAttrib2sv");
	core_load_func(vertex_attrib3d, "glVertexAttrib3d");
	core_load_func(vertex_attrib3dv, "glVertexAttrib3dv");
	core_load_func(vertex_attrib3f, "glVertexAttrib3f");
	core_load_func(vertex_attrib3fv, "glVertexAttrib3fv");
	core_load_func(vertex_attrib3s, "glVertexAttrib3s");
	core_load_func(vertex_attrib3sv, "glVertexAttrib3sv");
	core_load_func(vertex_attrib4_nbv, "glVertexAttrib4Nbv");
	core_load_func(vertex_attrib4_niv, "glVertexAttrib4Niv");
	core_load_func(vertex_attrib4_nsv, "glVertexAttrib4Nsv");
	core_load_func(vertex_attrib4_nub, "glVertexAttrib4Nub");
	core_load_func(vertex_attrib4_nubv, "glVertexAttrib4Nubv");
	core_load_func(vertex_attrib4_nuiv, "glVertexAttrib4Nuiv");
	core_load_func(vertex_attrib4_nusv, "glVertexAttrib4Nusv");
	core_load_func(vertex_attrib4bv, "glVertexAttrib4bv");
	core_load_func(vertex_attrib4d, "glVertexAttrib4d");
	core_load_func(vertex_attrib4dv, "glVertexAttrib4dv");
	core_load_func(vertex_attrib4f, "glVertexAttrib4f");
	core_load_func(vertex_attrib4fv, "glVertexAttrib4fv");
	core_load_func(vertex_attrib4iv, "glVertexAttrib4iv");
	core_load_func(vertex_attrib4s, "glVertexAttrib4s");
	core_load_func(vertex_attrib4sv, "glVertexAttrib4sv");
	core_load_func(vertex_attrib4ubv, "glVertexAttrib4ubv");
	core_load_func(vertex_attrib4uiv, "glVertexAttrib4uiv");
	core_load_func(vertex_attrib4usv, "glVertexAttrib4usv");
	core_load_func(vertex_attrib_pointer, "glVertexAttribPointer");
	core_load_func(uniform_matrix2x3fv, "glUniformMatrix2x3fv");
	core_load_func(uniform_matrix2x4fv, "glUniformMatrix2x4fv");
	core_load_func(uniform_matrix3x2fv, "glUniformMatrix3x2fv");
	core_load_func(uniform_matrix3x4fv, "glUniformMatrix3x4fv");
	core_load_func(uniform_matrix4x2fv, "glUniformMatrix4x2fv");
	core_load_func(uniform_matrix4x3fv, "glUniformMatrix4x3fv");
	core_load_func(begin_conditional_render, "glBeginConditionalRender");
	core_load_func(begin_transform_feedback, "glBeginTransformFeedback");
	core_load_func(bind_buffer_base, "glBindBufferBase");
	core_load_func(bind_buffer_range, "glBindBufferRange");
	core_load_func(bind_frag_data_location, "glBindFragDataLocation");
	core_load_func(bind_framebuffer, "glBindFramebuffer");
	core_load_func(bind_renderbuffer, "glBindRenderbuffer");
	core_load_func(bind_vertex_array, "glBindVertexArray");
	core_load_func(blit_framebuffer, "glBlitFramebuffer");
	core_load_func(check_framebuffer_status, "glCheckFramebufferStatus");
	core_load_func(clamp_color, "glClampColor");
	core_load_func(clear_bufferfi, "glClearBufferfi");
	core_load_func(clear_bufferfv, "glClearBufferfv");
	core_load_func(clear_bufferiv, "glClearBufferiv");
	core_load_func(clear_bufferuiv, "glClearBufferuiv");
	core_load_func(color_maski, "glColorMaski");
	core_load_func(delete_framebuffers, "glDeleteFramebuffers");
	core_load_func(delete_renderbuffers, "glDeleteRenderbuffers");
	core_load_func(delete_vertex_arrays, "glDeleteVertexArrays");
	core_load_func(disablei, "glDisablei");
	core_load_func(enablei, "glEnablei");
	core_load_func(end_conditional_render, "glEndConditionalRender");
	core_load_func(end_transform_feedback, "glEndTransformFeedback");
	core_load_func(flush_mapped_buffer_range, "glFlushMappedBufferRange");
	core_load_func(framebuffer_renderbuffer, "glFramebufferRenderbuffer");
	core_load_func(framebuffer_texture1_d, "glFramebufferTexture1D");
	core_load_func(framebuffer_texture2_d, "glFramebufferTexture2D");
	core_load_func(framebuffer_texture3_d, "glFramebufferTexture3D");
	core_load_func(framebuffer_texture_layer, "glFramebufferTextureLayer");
	core_load_func(gen_framebuffers, "glGenFramebuffers");
	core_load_func(gen_renderbuffers, "glGenRenderbuffers");
	core_load_func(gen_vertex_arrays, "glGenVertexArrays");
	core_load_func(generate_mipmap, "glGenerateMipmap");
	core_load_func(get_booleani_v, "glGetBooleani_v");
	core_load_func(get_frag_data_location, "glGetFragDataLocation");
	core_load_func(get_framebuffer_attachment_parameteriv, "glGetFramebufferAttachmentParameteriv");
	core_load_func(get_integeri_v, "glGetIntegeri_v");
	core_load_func(get_renderbuffer_parameteriv, "glGetRenderbufferParameteriv");
	core_load_func(get_stringi, "glGetStringi");
	core_load_func(get_tex_parameter_iiv, "glGetTexParameterIiv");
	core_load_func(get_tex_parameter_iuiv, "glGetTexParameterIuiv");
	core_load_func(get_transform_feedback_varying, "glGetTransformFeedbackVarying");
	core_load_func(get_uniformuiv, "glGetUniformuiv");
	core_load_func(get_vertex_attrib_iiv, "glGetVertexAttribIiv");
	core_load_func(get_vertex_attrib_iuiv, "glGetVertexAttribIuiv");
	core_load_func(is_enabledi, "glIsEnabledi");
	core_load_func(is_framebuffer, "glIsFramebuffer");
	core_load_func(is_renderbuffer, "glIsRenderbuffer");
	core_load_func(is_vertex_array, "glIsVertexArray");
	core_load_func(map_buffer_range, "glMapBufferRange");
	core_load_func(renderbuffer_storage, "glRenderbufferStorage");
	core_load_func(renderbuffer_storage_multisample, "glRenderbufferStorageMultisample");
	core_load_func(tex_parameter_iiv, "glTexParameterIiv");
	core_load_func(tex_parameter_iuiv, "glTexParameterIuiv");
	core_load_func(transform_feedback_varyings, "glTransformFeedbackVaryings");
	core_load_func(uniform1ui, "glUniform1ui");
	core_load_func(uniform1uiv, "glUniform1uiv");
	core_load_func(uniform2ui, "glUniform2ui");
	core_load_func(uniform2uiv, "glUniform2uiv");
	core_load_func(uniform3ui, "glUniform3ui");
	core_load_func(uniform3uiv, "glUniform3uiv");
	core_load_func(uniform4ui, "glUniform4ui");
	core_load_func(uniform4uiv, "glUniform4uiv");
	core_load_func(vertex_attrib_i1i, "glVertexAttribI1i");
	core_load_func(vertex_attrib_i1iv, "glVertexAttribI1iv");
	core_load_func(vertex_attrib_i1ui, "glVertexAttribI1ui");
	core_load_func(vertex_attrib_i1uiv, "glVertexAttribI1uiv");
	core_load_func(vertex_attrib_i2i, "glVertexAttribI2i");
	core_load_func(vertex_attrib_i2iv, "glVertexAttribI2iv");
	core_load_func(vertex_attrib_i2ui, "glVertexAttribI2ui");
	core_load_func(vertex_attrib_i2uiv, "glVertexAttribI2uiv");
	core_load_func(vertex_attrib_i3i, "glVertexAttribI3i");
	core_load_func(vertex_attrib_i3iv, "glVertexAttribI3iv");
	core_load_func(vertex_attrib_i3ui, "glVertexAttribI3ui");
	core_load_func(vertex_attrib_i3uiv, "glVertexAttribI3uiv");
	core_load_func(vertex_attrib_i4bv, "glVertexAttribI4bv");
	core_load_func(vertex_attrib_i4i, "glVertexAttribI4i");
	core_load_func(vertex_attrib_i4iv, "glVertexAttribI4iv");
	core_load_func(vertex_attrib_i4sv, "glVertexAttribI4sv");
	core_load_func(vertex_attrib_i4ubv, "glVertexAttribI4ubv");
	core_load_func(vertex_attrib_i4ui, "glVertexAttribI4ui");
	core_load_func(vertex_attrib_i4uiv, "glVertexAttribI4uiv");
	core_load_func(vertex_attrib_i4usv, "glVertexAttribI4usv");
	core_load_func(vertex_attrib_i_pointer, "glVertexAttribIPointer");
	core_load_func(copy_buffer_sub_data, "glCopyBufferSubData");
	core_load_func(draw_arrays_instanced, "glDrawArraysInstanced");
	core_load_func(draw_elements_instanced, "glDrawElementsInstanced");
	core_load_func(get_active_uniform_block_name, "glGetActiveUniformBlockName");
	core_load_func(get_active_uniform_blockiv, "glGetActiveUniformBlockiv");
	core_load_func(get_active_uniform_name, "glGetActiveUniformName");
	core_load_func(get_active_uniformsiv, "glGetActiveUniformsiv");
	core_load_func(get_uniform_block_index, "glGetUniformBlockIndex");
	core_load_func(get_uniform_indices, "glGetUniformIndices");
	core_load_func(primitive_restart_index, "glPrimitiveRestartIndex");
	core_load_func(tex_buffer, "glTexBuffer");
	core_load_func(uniform_block_binding, "glUniformBlockBinding");
	core_load_func(client_wait_sync, "glClientWaitSync");
	core_load_func(delete_sync, "glDeleteSync");
	core_load_func(draw_elements_base_vertex, "glDrawElementsBaseVertex");
	core_load_func(draw_elements_instanced_base_vertex, "glDrawElementsInstancedBaseVertex");
	core_load_func(draw_range_elements_base_vertex, "glDrawRangeElementsBaseVertex");
	core_load_func(fence_sync, "glFenceSync");
	core_load_func(framebuffer_texture, "glFramebufferTexture");
	core_load_func(get_buffer_parameteri64v, "glGetBufferParameteri64v");
	core_load_func(get_integer64i_v, "glGetInteger64i_v");
	core_load_func(get_integer64v, "glGetInteger64v");
	core_load_func(get_multisamplefv, "glGetMultisamplefv");
	core_load_func(get_synciv, "glGetSynciv");
	core_load_func(is_sync, "glIsSync");
	core_load_func(multi_draw_elements_base_vertex, "glMultiDrawElementsBaseVertex");
	core_load_func(provoking_vertex, "glProvokingVertex");
	core_load_func(sample_maski, "glSampleMaski");
	core_load_func(tex_image2_d_multisample, "glTexImage2DMultisample");
	core_load_func(tex_image3_d_multisample, "glTexImage3DMultisample");
	core_load_func(wait_sync, "glWaitSync");
	return num_failed;
}

int load_gl_3_3_functions()
{
	int num_failed = load_gl_3_2_functions();
	auto core_load_func = [&] (auto& func, char const* spec) {
		get_proc(func, spec);
		if (!func) ++num_failed;
	};
	core_load_func(bind_frag_data_location_indexed, "glBindFragDataLocationIndexed");
	core_load_func(bind_sampler, "glBindSampler");
	core_load_func(delete_samplers, "glDeleteSamplers");
	core_load_func(gen_samplers, "glGenSamplers");
	core_load_func(get_frag_data_index, "glGetFragDataIndex");
	core_load_func(get_query_objecti64v, "glGetQueryObjecti64v");
	core_load_func(get_query_objectui64v, "glGetQueryObjectui64v");
	core_load_func(get_sampler_parameter_iiv, "glGetSamplerParameterIiv");
	core_load_func(get_sampler_parameter_iuiv, "glGetSamplerParameterIuiv");
	core_load_func(get_sampler_parameterfv, "glGetSamplerParameterfv");
	core_load_func(get_sampler_parameteriv, "glGetSamplerParameteriv");
	core_load_func(is_sampler, "glIsSampler");
	core_load_func(query_counter, "glQueryCounter");
	core_load_func(sampler_parameter_iiv, "glSamplerParameterIiv");
	core_load_func(sampler_parameter_iuiv, "glSamplerParameterIuiv");
	core_load_func(sampler_parameterf, "glSamplerParameterf");
	core_load_func(sampler_parameterfv, "glSamplerParameterfv");
	core_load_func(sampler_parameteri, "glSamplerParameteri");
	core_load_func(sampler_parameteriv, "glSamplerParameteriv");
	core_load_func(vertex_attrib_divisor, "glVertexAttribDivisor");
	core_load_func(vertex_attrib_p1ui, "glVertexAttribP1ui");
	core_load_func(vertex_attrib_p1uiv, "glVertexAttribP1uiv");
	core_load_func(vertex_attrib_p2ui, "glVertexAttribP2ui");
	core_load_func(vertex_attrib_p2uiv, "glVertexAttribP2uiv");
	core_load_func(vertex_attrib_p3ui, "glVertexAttribP3ui");
	core_load_func(vertex_attrib_p3uiv, "glVertexAttribP3uiv");
	core_load_func(vertex_attrib_p4ui, "glVertexAttribP4ui");
	core_load_func(vertex_attrib_p4uiv, "glVertexAttribP4uiv");
	return num_failed;
}

int load_gl_4_0_functions()
{
	int num_failed = load_gl_3_3_functions();
	auto core_load_func = [&] (auto& func, char const* spec) {
		get_proc(func, spec);
		if (!func) ++num_failed;
	};
	core_load_func(begin_query_indexed, "glBeginQueryIndexed");
	core_load_func(bind_transform_feedback, "glBindTransformFeedback");
	core_load_func(blend_equation_separatei, "glBlendEquationSeparatei");
	core_load_func(blend_equationi, "glBlendEquationi");
	core_load_func(blend_func_separatei, "glBlendFuncSeparatei");
	core_load_func(blend_funci, "glBlendFunci");
	core_load_func(delete_transform_feedbacks, "glDeleteTransformFeedbacks");
	core_load_func(draw_arrays_indirect, "glDrawArraysIndirect");
	core_load_func(draw_elements_indirect, "glDrawElementsIndirect");
	core_load_func(draw_transform_feedback, "glDrawTransformFeedback");
	core_load_func(draw_transform_feedback_stream, "glDrawTransformFeedbackStream");
	core_load_func(end_query_indexed, "glEndQueryIndexed");
	core_load_func(gen_transform_feedbacks, "glGenTransformFeedbacks");
	core_load_func(get_active_subroutine_name, "glGetActiveSubroutineName");
	core_load_func(get_active_subroutine_uniform_name, "glGetActiveSubroutineUniformName");
	core_load_func(get_active_subroutine_uniformiv, "glGetActiveSubroutineUniformiv");
	core_load_func(get_program_stageiv, "glGetProgramStageiv");
	core_load_func(get_query_indexediv, "glGetQueryIndexediv");
	core_load_func(get_subroutine_index, "glGetSubroutineIndex");
	core_load_func(get_subroutine_uniform_location, "glGetSubroutineUniformLocation");
	core_load_func(get_uniform_subroutineuiv, "glGetUniformSubroutineuiv");
	core_load_func(get_uniformdv, "glGetUniformdv");
	core_load_func(is_transform_feedback, "glIsTransformFeedback");
	core_load_func(min_sample_shading, "glMinSampleShading");
	core_load_func(patch_parameterfv, "glPatchParameterfv");
	core_load_func(patch_parameteri, "glPatchParameteri");
	core_load_func(pause_transform_feedback, "glPauseTransformFeedback");
	core_load_func(resume_transform_feedback, "glResumeTransformFeedback");
	core_load_func(uniform1d, "glUniform1d");
	core_load_func(uniform1dv, "glUniform1dv");
	core_load_func(uniform2d, "glUniform2d");
	core_load_func(uniform2dv, "glUniform2dv");
	core_load_func(uniform3d, "glUniform3d");
	core_load_func(uniform3dv, "glUniform3dv");
	core_load_func(uniform4d, "glUniform4d");
	core_load_func(uniform4dv, "glUniform4dv");
	core_load_func(uniform_matrix2dv, "glUniformMatrix2dv");
	core_load_func(uniform_matrix2x3dv, "glUniformMatrix2x3dv");
	core_load_func(uniform_matrix2x4dv, "glUniformMatrix2x4dv");
	core_load_func(uniform_matrix3dv, "glUniformMatrix3dv");
	core_load_func(uniform_matrix3x2dv, "glUniformMatrix3x2dv");
	core_load_func(uniform_matrix3x4dv, "glUniformMatrix3x4dv");
	core_load_func(uniform_matrix4dv, "glUniformMatrix4dv");
	core_load_func(uniform_matrix4x2dv, "glUniformMatrix4x2dv");
	core_load_func(uniform_matrix4x3dv, "glUniformMatrix4x3dv");
	core_load_func(uniform_subroutinesuiv, "glUniformSubroutinesuiv");
	return num_failed;
}

int load_gl_4_1_functions()
{
	int num_failed = load_gl_4_0_functions();
	auto core_load_func = [&] (auto& func, char const* spec) {
		get_proc(func, spec);
		if (!func) ++num_failed;
	};
	core_load_func(active_shader_program, "glActiveShaderProgram");
	core_load_func(bind_program_pipeline, "glBindProgramPipeline");
	core_load_func(clear_depthf, "glClearDepthf");
	core_load_func(create_shader_programv, "glCreateShaderProgramv");
	core_load_func(delete_program_pipelines, "glDeleteProgramPipelines");
	core_load_func(depth_range_arrayv, "glDepthRangeArrayv");
	core_load_func(depth_range_indexed, "glDepthRangeIndexed");
	core_load_func(depth_rangef, "glDepthRangef");
	core_load_func(gen_program_pipelines, "glGenProgramPipelines");
	core_load_func(get_doublei_v, "glGetDoublei_v");
	core_load_func(get_floati_v, "glGetFloati_v");
	core_load_func(get_program_binary, "glGetProgramBinary");
	core_load_func(get_program_pipeline_info_log, "glGetProgramPipelineInfoLog");
	core_load_func(get_program_pipelineiv, "glGetProgramPipelineiv");
	core_load_func(get_shader_precision_format, "glGetShaderPrecisionFormat");
	core_load_func(get_vertex_attrib_ldv, "glGetVertexAttribLdv");
	core_load_func(is_program_pipeline, "glIsProgramPipeline");
	core_load_func(program_binary, "glProgramBinary");
	core_load_func(program_parameteri, "glProgramParameteri");
	core_load_func(program_uniform1d, "glProgramUniform1d");
	core_load_func(program_uniform1dv, "glProgramUniform1dv");
	core_load_func(program_uniform1f, "glProgramUniform1f");
	core_load_func(program_uniform1fv, "glProgramUniform1fv");
	core_load_func(program_uniform1i, "glProgramUniform1i");
	core_load_func(program_uniform1iv, "glProgramUniform1iv");
	core_load_func(program_uniform1ui, "glProgramUniform1ui");
	core_load_func(program_uniform1uiv, "glProgramUniform1uiv");
	core_load_func(program_uniform2d, "glProgramUniform2d");
	core_load_func(program_uniform2dv, "glProgramUniform2dv");
	core_load_func(program_uniform2f, "glProgramUniform2f");
	core_load_func(program_uniform2fv, "glProgramUniform2fv");
	core_load_func(program_uniform2i, "glProgramUniform2i");
	core_load_func(program_uniform2iv, "glProgramUniform2iv");
	core_load_func(program_uniform2ui, "glProgramUniform2ui");
	core_load_func(program_uniform2uiv, "glProgramUniform2uiv");
	core_load_func(program_uniform3d, "glProgramUniform3d");
	core_load_func(program_uniform3dv, "glProgramUniform3dv");
	core_load_func(program_uniform3f, "glProgramUniform3f");
	core_load_func(program_uniform3fv, "glProgramUniform3fv");
	core_load_func(program_uniform3i, "glProgramUniform3i");
	core_load_func(program_uniform3iv, "glProgramUniform3iv");
	core_load_func(program_uniform3ui, "glProgramUniform3ui");
	core_load_func(program_uniform3uiv, "glProgramUniform3uiv");
	core_load_func(program_uniform4d, "glProgramUniform4d");
	core_load_func(program_uniform4dv, "glProgramUniform4dv");
	core_load_func(program_uniform4f, "glProgramUniform4f");
	core_load_func(program_uniform4fv, "glProgramUniform4fv");
	core_load_func(program_uniform4i, "glProgramUniform4i");
	core_load_func(program_uniform4iv, "glProgramUniform4iv");
	core_load_func(program_uniform4ui, "glProgramUniform4ui");
	core_load_func(program_uniform4uiv, "glProgramUniform4uiv");
	core_load_func(program_uniform_matrix2dv, "glProgramUniformMatrix2dv");
	core_load_func(program_uniform_matrix2fv, "glProgramUniformMatrix2fv");
	core_load_func(program_uniform_matrix2x3dv, "glProgramUniformMatrix2x3dv");
	core_load_func(program_uniform_matrix2x3fv, "glProgramUniformMatrix2x3fv");
	core_load_func(program_uniform_matrix2x4dv, "glProgramUniformMatrix2x4dv");
	core_load_func(program_uniform_matrix2x4fv, "glProgramUniformMatrix2x4fv");
	core_load_func(program_uniform_matrix3dv, "glProgramUniformMatrix3dv");
	core_load_func(program_uniform_matrix3fv, "glProgramUniformMatrix3fv");
	core_load_func(program_uniform_matrix3x2dv, "glProgramUniformMatrix3x2dv");
	core_load_func(program_uniform_matrix3x2fv, "glProgramUniformMatrix3x2fv");
	core_load_func(program_uniform_matrix3x4dv, "glProgramUniformMatrix3x4dv");
	core_load_func(program_uniform_matrix3x4fv, "glProgramUniformMatrix3x4fv");
	core_load_func(program_uniform_matrix4dv, "glProgramUniformMatrix4dv");
	core_load_func(program_uniform_matrix4fv, "glProgramUniformMatrix4fv");
	core_load_func(program_uniform_matrix4x2dv, "glProgramUniformMatrix4x2dv");
	core_load_func(program_uniform_matrix4x2fv, "glProgramUniformMatrix4x2fv");
	core_load_func(program_uniform_matrix4x3dv, "glProgramUniformMatrix4x3dv");
	core_load_func(program_uniform_matrix4x3fv, "glProgramUniformMatrix4x3fv");
	core_load_func(release_shader_compiler, "glReleaseShaderCompiler");
	core_load_func(scissor_arrayv, "glScissorArrayv");
	core_load_func(scissor_indexed, "glScissorIndexed");
	core_load_func(scissor_indexedv, "glScissorIndexedv");
	core_load_func(shader_binary, "glShaderBinary");
	core_load_func(use_program_stages, "glUseProgramStages");
	core_load_func(validate_program_pipeline, "glValidateProgramPipeline");
	core_load_func(vertex_attrib_l1d, "glVertexAttribL1d");
	core_load_func(vertex_attrib_l1dv, "glVertexAttribL1dv");
	core_load_func(vertex_attrib_l2d, "glVertexAttribL2d");
	core_load_func(vertex_attrib_l2dv, "glVertexAttribL2dv");
	core_load_func(vertex_attrib_l3d, "glVertexAttribL3d");
	core_load_func(vertex_attrib_l3dv, "glVertexAttribL3dv");
	core_load_func(vertex_attrib_l4d, "glVertexAttribL4d");
	core_load_func(vertex_attrib_l4dv, "glVertexAttribL4dv");
	core_load_func(vertex_attrib_l_pointer, "glVertexAttribLPointer");
	core_load_func(viewport_arrayv, "glViewportArrayv");
	core_load_func(viewport_indexedf, "glViewportIndexedf");
	core_load_func(viewport_indexedfv, "glViewportIndexedfv");
	return num_failed;
}

int load_gl_4_2_functions()
{
	int num_failed = load_gl_4_1_functions();
	auto core_load_func = [&] (auto& func, char const* spec) {
		get_proc(func, spec);
		if (!func) ++num_failed;
	};
	core_load_func(bind_image_texture, "glBindImageTexture");
	core_load_func(draw_arrays_instanced_base_instance, "glDrawArraysInstancedBaseInstance");
	core_load_func(draw_elements_instanced_base_instance, "glDrawElementsInstancedBaseInstance");
	core_load_func(draw_elements_instanced_base_vertex_base_instance, "glDrawElementsInstancedBaseVertexBaseInstance");
	core_load_func(draw_transform_feedback_instanced, "glDrawTransformFeedbackInstanced");
	core_load_func(draw_transform_feedback_stream_instanced, "glDrawTransformFeedbackStreamInstanced");
	core_load_func(get_active_atomic_counter_bufferiv, "glGetActiveAtomicCounterBufferiv");
	core_load_func(get_internalformativ, "glGetInternalformativ");
	core_load_func(memory_barrier, "glMemoryBarrier");
	core_load_func(tex_storage1_d, "glTexStorage1D");
	core_load_func(tex_storage2_d, "glTexStorage2D");
	core_load_func(tex_storage3_d, "glTexStorage3D");
	return num_failed;
}

int load_gl_4_3_functions()
{
	int num_failed = load_gl_4_2_functions();
	auto core_load_func = [&] (auto& func, char const* spec) {
		get_proc(func, spec);
		if (!func) ++num_failed;
	};
	core_load_func(bind_vertex_buffer, "glBindVertexBuffer");
	core_load_func(clear_buffer_data, "glClearBufferData");
	core_load_func(clear_buffer_sub_data, "glClearBufferSubData");
	core_load_func(copy_image_sub_data, "glCopyImageSubData");
	core_load_func(debug_message_callback, "glDebugMessageCallback");
	core_load_func(debug_message_control, "glDebugMessageControl");
	core_load_func(debug_message_insert, "glDebugMessageInsert");
	core_load_func(dispatch_compute, "glDispatchCompute");
	core_load_func(dispatch_compute_indirect, "glDispatchComputeIndirect");
	core_load_func(framebuffer_parameteri, "glFramebufferParameteri");
	core_load_func(get_debug_message_log, "glGetDebugMessageLog");
	core_load_func(get_framebuffer_parameteriv, "glGetFramebufferParameteriv");
	core_load_func(get_internalformati64v, "glGetInternalformati64v");
	core_load_func(get_object_label, "glGetObjectLabel");
	core_load_func(get_object_ptr_label, "glGetObjectPtrLabel");
	core_load_func(get_program_interfaceiv, "glGetProgramInterfaceiv");
	core_load_func(get_program_resource_index, "glGetProgramResourceIndex");
	core_load_func(get_program_resource_location, "glGetProgramResourceLocation");
	core_load_func(get_program_resource_location_index, "glGetProgramResourceLocationIndex");
	core_load_func(get_program_resource_name, "glGetProgramResourceName");
	core_load_func(get_program_resourceiv, "glGetProgramResourceiv");
	core_load_func(invalidate_buffer_data, "glInvalidateBufferData");
	core_load_func(invalidate_buffer_sub_data, "glInvalidateBufferSubData");
	core_load_func(invalidate_framebuffer, "glInvalidateFramebuffer");
	core_load_func(invalidate_sub_framebuffer, "glInvalidateSubFramebuffer");
	core_load_func(invalidate_tex_image, "glInvalidateTexImage");
	core_load_func(invalidate_tex_sub_image, "glInvalidateTexSubImage");
	core_load_func(multi_draw_arrays_indirect, "glMultiDrawArraysIndirect");
	core_load_func(multi_draw_elements_indirect, "glMultiDrawElementsIndirect");
	core_load_func(object_label, "glObjectLabel");
	core_load_func(object_ptr_label, "glObjectPtrLabel");
	core_load_func(pop_debug_group, "glPopDebugGroup");
	core_load_func(push_debug_group, "glPushDebugGroup");
	core_load_func(shader_storage_block_binding, "glShaderStorageBlockBinding");
	core_load_func(tex_buffer_range, "glTexBufferRange");
	core_load_func(tex_storage2_d_multisample, "glTexStorage2DMultisample");
	core_load_func(tex_storage3_d_multisample, "glTexStorage3DMultisample");
	core_load_func(texture_view, "glTextureView");
	core_load_func(vertex_attrib_binding, "glVertexAttribBinding");
	core_load_func(vertex_attrib_format, "glVertexAttribFormat");
	core_load_func(vertex_attrib_i_format, "glVertexAttribIFormat");
	core_load_func(vertex_attrib_l_format, "glVertexAttribLFormat");
	core_load_func(vertex_binding_divisor, "glVertexBindingDivisor");
	return num_failed;
}

int load_gl_4_4_functions()
{
	int num_failed = load_gl_4_3_functions();
	auto core_load_func = [&] (auto& func, char const* spec) {
		get_proc(func, spec);
		if (!func) ++num_failed;
	};
	core_load_func(bind_buffers_base, "glBindBuffersBase");
	core_load_func(bind_buffers_range, "glBindBuffersRange");
	core_load_func(bind_image_textures, "glBindImageTextures");
	core_load_func(bind_samplers, "glBindSamplers");
	core_load_func(bind_textures, "glBindTextures");
	core_load_func(bind_vertex_buffers, "glBindVertexBuffers");
	core_load_func(buffer_storage, "glBufferStorage");
	core_load_func(clear_tex_image, "glClearTexImage");
	core_load_func(clear_tex_sub_image, "glClearTexSubImage");
	return num_failed;
}

int load_gl_4_5_functions()
{
	int num_failed = load_gl_4_4_functions();
	auto core_load_func = [&] (auto& func, char const* spec) {
		get_proc(func, spec);
		if (!func) ++num_failed;
	};
	core_load_func(bind_texture_unit, "glBindTextureUnit");
	core_load_func(blit_named_framebuffer, "glBlitNamedFramebuffer");
	core_load_func(check_named_framebuffer_status, "glCheckNamedFramebufferStatus");
	core_load_func(clear_named_buffer_data, "glClearNamedBufferData");
	core_load_func(clear_named_buffer_sub_data, "glClearNamedBufferSubData");
	core_load_func(clear_named_framebufferfi, "glClearNamedFramebufferfi");
	core_load_func(clear_named_framebufferfv, "glClearNamedFramebufferfv");
	core_load_func(clear_named_framebufferiv, "glClearNamedFramebufferiv");
	core_load_func(clear_named_framebufferuiv, "glClearNamedFramebufferuiv");
	core_load_func(clip_control, "glClipControl");
	core_load_func(compressed_texture_sub_image1_d, "glCompressedTextureSubImage1D");
	core_load_func(compressed_texture_sub_image2_d, "glCompressedTextureSubImage2D");
	core_load_func(compressed_texture_sub_image3_d, "glCompressedTextureSubImage3D");
	core_load_func(copy_named_buffer_sub_data, "glCopyNamedBufferSubData");
	core_load_func(copy_texture_sub_image1_d, "glCopyTextureSubImage1D");
	core_load_func(copy_texture_sub_image2_d, "glCopyTextureSubImage2D");
	core_load_func(copy_texture_sub_image3_d, "glCopyTextureSubImage3D");
	core_load_func(create_buffers, "glCreateBuffers");
	core_load_func(create_framebuffers, "glCreateFramebuffers");
	core_load_func(create_program_pipelines, "glCreateProgramPipelines");
	core_load_func(create_queries, "glCreateQueries");
	core_load_func(create_renderbuffers, "glCreateRenderbuffers");
	core_load_func(create_samplers, "glCreateSamplers");
	core_load_func(create_textures, "glCreateTextures");
	core_load_func(create_transform_feedbacks, "glCreateTransformFeedbacks");
	core_load_func(create_vertex_arrays, "glCreateVertexArrays");
	core_load_func(disable_vertex_array_attrib, "glDisableVertexArrayAttrib");
	core_load_func(enable_vertex_array_attrib, "glEnableVertexArrayAttrib");
	core_load_func(flush_mapped_named_buffer_range, "glFlushMappedNamedBufferRange");
	core_load_func(generate_texture_mipmap, "glGenerateTextureMipmap");
	core_load_func(get_compressed_texture_image, "glGetCompressedTextureImage");
	core_load_func(get_compressed_texture_sub_image, "glGetCompressedTextureSubImage");
	core_load_func(get_graphics_reset_status, "glGetGraphicsResetStatus");
	core_load_func(get_named_buffer_parameteri64v, "glGetNamedBufferParameteri64v");
	core_load_func(get_named_buffer_parameteriv, "glGetNamedBufferParameteriv");
	core_load_func(get_named_buffer_pointerv, "glGetNamedBufferPointerv");
	core_load_func(get_named_buffer_sub_data, "glGetNamedBufferSubData");
	core_load_func(get_named_framebuffer_attachment_parameteriv, "glGetNamedFramebufferAttachmentParameteriv");
	core_load_func(get_named_framebuffer_parameteriv, "glGetNamedFramebufferParameteriv");
	core_load_func(get_named_renderbuffer_parameteriv, "glGetNamedRenderbufferParameteriv");
	core_load_func(get_query_buffer_objecti64v, "glGetQueryBufferObjecti64v");
	core_load_func(get_query_buffer_objectiv, "glGetQueryBufferObjectiv");
	core_load_func(get_query_buffer_objectui64v, "glGetQueryBufferObjectui64v");
	core_load_func(get_query_buffer_objectuiv, "glGetQueryBufferObjectuiv");
	core_load_func(get_texture_image, "glGetTextureImage");
	core_load_func(get_texture_level_parameterfv, "glGetTextureLevelParameterfv");
	core_load_func(get_texture_level_parameteriv, "glGetTextureLevelParameteriv");
	core_load_func(get_texture_parameter_iiv, "glGetTextureParameterIiv");
	core_load_func(get_texture_parameter_iuiv, "glGetTextureParameterIuiv");
	core_load_func(get_texture_parameterfv, "glGetTextureParameterfv");
	core_load_func(get_texture_parameteriv, "glGetTextureParameteriv");
	core_load_func(get_texture_sub_image, "glGetTextureSubImage");
	core_load_func(get_transform_feedbacki64_v, "glGetTransformFeedbacki64_v");
	core_load_func(get_transform_feedbacki_v, "glGetTransformFeedbacki_v");
	core_load_func(get_transform_feedbackiv, "glGetTransformFeedbackiv");
	core_load_func(get_vertex_array_indexed64iv, "glGetVertexArrayIndexed64iv");
	core_load_func(get_vertex_array_indexediv, "glGetVertexArrayIndexediv");
	core_load_func(get_vertex_arrayiv, "glGetVertexArrayiv");
	core_load_func(getn_compressed_tex_image, "glGetnCompressedTexImage");
	core_load_func(getn_tex_image, "glGetnTexImage");
	core_load_func(getn_uniformdv, "glGetnUniformdv");
	core_load_func(getn_uniformfv, "glGetnUniformfv");
	core_load_func(getn_uniformiv, "glGetnUniformiv");
	core_load_func(getn_uniformuiv, "glGetnUniformuiv");
	core_load_func(invalidate_named_framebuffer_data, "glInvalidateNamedFramebufferData");
	core_load_func(invalidate_named_framebuffer_sub_data, "glInvalidateNamedFramebufferSubData");
	core_load_func(map_named_buffer, "glMapNamedBuffer");
	core_load_func(map_named_buffer_range, "glMapNamedBufferRange");
	core_load_func(memory_barrier_by_region, "glMemoryBarrierByRegion");
	core_load_func(named_buffer_data, "glNamedBufferData");
	core_load_func(named_buffer_storage, "glNamedBufferStorage");
	core_load_func(named_buffer_sub_data, "glNamedBufferSubData");
	core_load_func(named_framebuffer_draw_buffer, "glNamedFramebufferDrawBuffer");
	core_load_func(named_framebuffer_draw_buffers, "glNamedFramebufferDrawBuffers");
	core_load_func(named_framebuffer_parameteri, "glNamedFramebufferParameteri");
	core_load_func(named_framebuffer_read_buffer, "glNamedFramebufferReadBuffer");
	core_load_func(named_framebuffer_renderbuffer, "glNamedFramebufferRenderbuffer");
	core_load_func(named_framebuffer_texture, "glNamedFramebufferTexture");
	core_load_func(named_framebuffer_texture_layer, "glNamedFramebufferTextureLayer");
	core_load_func(named_renderbuffer_storage, "glNamedRenderbufferStorage");
	core_load_func(named_renderbuffer_storage_multisample, "glNamedRenderbufferStorageMultisample");
	core_load_func(readn_pixels, "glReadnPixels");
	core_load_func(texture_barrier, "glTextureBarrier");
	core_load_func(texture_buffer, "glTextureBuffer");
	core_load_func(texture_buffer_range, "glTextureBufferRange");
	core_load_func(texture_parameter_iiv, "glTextureParameterIiv");
	core_load_func(texture_parameter_iuiv, "glTextureParameterIuiv");
	core_load_func(texture_parameterf, "glTextureParameterf");
	core_load_func(texture_parameterfv, "glTextureParameterfv");
	core_load_func(texture_parameteri, "glTextureParameteri");
	core_load_func(texture_parameteriv, "glTextureParameteriv");
	core_load_func(texture_storage1_d, "glTextureStorage1D");
	core_load_func(texture_storage2_d, "glTextureStorage2D");
	core_load_func(texture_storage2_d_multisample, "glTextureStorage2DMultisample");
	core_load_func(texture_storage3_d, "glTextureStorage3D");
	core_load_func(texture_storage3_d_multisample, "glTextureStorage3DMultisample");
	core_load_func(texture_sub_image1_d, "glTextureSubImage1D");
	core_load_func(texture_sub_image2_d, "glTextureSubImage2D");
	core_load_func(texture_sub_image3_d, "glTextureSubImage3D");
	core_load_func(transform_feedback_buffer_base, "glTransformFeedbackBufferBase");
	core_load_func(transform_feedback_buffer_range, "glTransformFeedbackBufferRange");
	core_load_func(unmap_named_buffer, "glUnmapNamedBuffer");
	core_load_func(vertex_array_attrib_binding, "glVertexArrayAttribBinding");
	core_load_func(vertex_array_attrib_format, "glVertexArrayAttribFormat");
	core_load_func(vertex_array_attrib_i_format, "glVertexArrayAttribIFormat");
	core_load_func(vertex_array_attrib_l_format, "glVertexArrayAttribLFormat");
	core_load_func(vertex_array_binding_divisor, "glVertexArrayBindingDivisor");
	core_load_func(vertex_array_element_buffer, "glVertexArrayElementBuffer");
	core_load_func(vertex_array_vertex_buffer, "glVertexArrayVertexBuffer");
	core_load_func(vertex_array_vertex_buffers, "glVertexArrayVertexBuffers");
	return num_failed;
}
} //namespace

namespace sys {
namespace {
using load_extension_ptr = int(*)();
struct map_entry {
	map_entry(string_view _ext_name, ext::load_result& _ext_variable)
		: ext_name{_ext_name},
		  ext_variable{&_ext_variable}
	{ }

	map_entry(string_view _ext_name, ext::load_result& _ext_variable, load_extension_ptr _loaderFunc)
		: ext_name{_ext_name},
		  ext_variable{&_ext_variable},
		  loaderFunc{_loaderFunc}
	{ }

	string_view ext_name;
	ext::load_result* ext_variable;
	load_extension_ptr loaderFunc = nullptr;
};

bool operator<(map_entry const& a, map_entry const& b)
{
	return a.ext_name < b.ext_name;
}

bool operator==(map_entry const& a, map_entry const& b)
{
	return a.ext_name == b.ext_name;
}

void InitializeMappingTable(std::vector<map_entry> &table)
{
	table.reserve(0);
	std::sort(begin(table), end(table));
}

void ClearExtensionVars()
{
}

void LoadExtByName(std::vector<map_entry>& table, string_view extension)
{
	auto compare = [] (map_entry const& e, string_view a)
	{
		return a == e.ext_name;
	};
	auto entry = aw::binary_find(begin(table), end(table), extension, compare);

	if (entry != end(table)) {
		if(entry->loaderFunc)
			(*entry->ext_variable) = ext::load_result(true, entry->loaderFunc());
		else
			(*entry->ext_variable) = ext::load_result(true, 0);
	}
}


static void ProcExtsFromExtList(std::vector<map_entry> &table)
{
	GLint idx;
	GLint num = 0;
	gl::get_integerv(GL_NUM_EXTENSIONS, &num);

	for(idx = 0; idx < num; ++idx) {
		const char* strExtensionName = (const char *)gl::get_stringi(GL_EXTENSIONS, idx);
		LoadExtByName(table, strExtensionName);
	}
}

ext::load_result load_functions()
{
	ClearExtensionVars();
	std::vector<map_entry> table;
	InitializeMappingTable(table);

	get_proc(get_integerv, "glGetIntegerv");
	if(!get_integerv) return ext::load_result();
	get_proc(get_stringi, "glGetStringi");
	if(!get_stringi) return ext::load_result();

	ProcExtsFromExtList(table);
}
} //namespace

ext::load_result load_functions_3_2()
{
	load_functions();

	int num_failed = load_gl_3_2_functions();
	return ext::load_result(true, num_failed);
}

ext::load_result load_functions_3_3()
{
	load_functions();

	int num_failed = load_gl_3_3_functions();
	return ext::load_result(true, num_failed);
}

ext::load_result load_functions_4_0()
{
	load_functions();

	int num_failed = load_gl_4_0_functions();
	return ext::load_result(true, num_failed);
}

ext::load_result load_functions_4_1()
{
	load_functions();

	int num_failed = load_gl_4_1_functions();
	return ext::load_result(true, num_failed);
}

ext::load_result load_functions_4_2()
{
	load_functions();

	int num_failed = load_gl_4_2_functions();
	return ext::load_result(true, num_failed);
}

ext::load_result load_functions_4_3()
{
	load_functions();

	int num_failed = load_gl_4_3_functions();
	return ext::load_result(true, num_failed);
}

ext::load_result load_functions_4_4()
{
	load_functions();

	int num_failed = load_gl_4_4_functions();
	return ext::load_result(true, num_failed);
}

ext::load_result load_functions_4_5()
{
	load_functions();

	int num_failed = load_gl_4_5_functions();
	return ext::load_result(true, num_failed);
}

static int g_major_version = 0;
static int g_minor_version = 0;

static void get_gl_version()
{
	get_integerv(GL_MAJOR_VERSION, &g_major_version);
	get_integerv(GL_MINOR_VERSION, &g_minor_version);
}

int get_major_version()
{
	if(g_major_version == 0)
		get_gl_version();
	return g_major_version;
}

int get_minor_version()
{
	//Yes, check the major version to get the minor one.
	if(g_major_version == 0)
		get_gl_version();
	return g_minor_version;
}

bool is_version_geq(int majorVersion, int minorVersion)
{
	if(g_major_version == 0)
		get_gl_version();

	if(majorVersion < g_major_version) return true;
	if(majorVersion > g_major_version) return false;
	if(minorVersion <= g_minor_version) return true;
	return false;
}

} //namespace sys
} //namespace gl
